"""fix_up

Revision ID: a4c622d36ce2
Revises: e11be1940ae9
Create Date: 2023-11-11 14:38:22.167875

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a4c622d36ce2"
down_revision: Union[str, None] = "e11be1940ae9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "request_log_new",
        sa.Column("request_id", sa.Integer(), nullable=False),
        sa.Column("time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("ip_address", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("request_id"),
    )
    op.create_table(
        "site",
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("site_code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "unknown",
                "healthy",
                "offline",
                "coming_online",
                "needs_attention",
                name="sitestatus",
            ),
            nullable=False,
        ),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column(
            "site_type",
            sa.Enum(
                "unknown",
                "urban_background",
                "suburban",
                "kerbside",
                "industrial",
                "roadside",
                "rural",
                name="sitetype",
            ),
            nullable=False,
        ),
        sa.Column("source", sa.Enum("breathe_london", "london_air", name="source"), nullable=False),
        sa.Column("photo_url", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("borough", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("site_id"),
        sa.UniqueConstraint("site_code"),
    )
    op.create_table(
        "sensor_data_new",
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("series", sa.Enum("pm25", "no2", name="series"), nullable=False),
        sa.Column("time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["site_id"],
            ["site.site_id"],
        ),
        sa.PrimaryKeyConstraint("site_id", "series", "time"),
    )
    op.drop_index("ix_sensor_data_series", table_name="sensor_data")
    op.drop_index("ix_sensor_data_site_code", table_name="sensor_data")
    op.drop_index("ix_sensor_data_time", table_name="sensor_data")
    op.drop_index("sensor_data_time_idx", table_name="sensor_data")
    op.drop_table("sensor_data")
    op.drop_index("ix_request_log_time", table_name="request_log")
    op.drop_table("request_log")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "request_log",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("time", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.Column("ip_address", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("path", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="request_log_pkey"),
    )
    op.create_index("ix_request_log_time", "request_log", ["time"], unique=False)
    op.create_table(
        "sensor_data",
        sa.Column("site_code", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("series", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("time", postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
        sa.Column("value", sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("site_code", "series", "time", name="sensor_data_pkey"),
    )
    op.create_index("sensor_data_time_idx", "sensor_data", [sa.text("time DESC")], unique=False)
    op.create_index("ix_sensor_data_time", "sensor_data", ["time"], unique=False)
    op.create_index("ix_sensor_data_site_code", "sensor_data", ["site_code"], unique=False)
    op.create_index("ix_sensor_data_series", "sensor_data", ["series"], unique=False)
    op.drop_table("sensor_data_new")
    op.drop_table("site")
    op.drop_table("request_log_new")
    # ### end Alembic commands ###
