"""init

Revision ID: e6899638a13d
Revises: 
Create Date: 2023-11-05 16:04:03.790761

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = "e6899638a13d"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create Timescale extension
    connection = op.get_bind()
    connection.execute(text("CREATE EXTENSION IF NOT EXISTS timescaledb;"))

    # Create the underlying table
    op.create_table(
        "sensor_data",
        sa.Column("site_code", sa.String(), nullable=False),
        sa.Column("series", sa.String(), nullable=False),
        sa.Column("time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.PrimaryKeyConstraint("site_code", "series", "time"),
    )

    # Turn it into a Timescale hypertable
    connection.execute(text("SELECT create_hypertable('sensor_data','time');"))

    op.create_index(
        op.f("ix_sensor_data_series"), "sensor_data", ["series"], unique=False
    )
    op.create_index(
        op.f("ix_sensor_data_site_code"), "sensor_data", ["site_code"], unique=False
    )
    op.create_index(op.f("ix_sensor_data_time"), "sensor_data", ["time"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_sensor_data_site_code"), table_name="sensor_data")
    op.drop_index(op.f("ix_sensor_data_series"), table_name="sensor_data")
    op.drop_index(op.f("ix_sensor_data_time"), table_name="sensor_data")
    op.drop_table("sensor_data")
    # ### end Alembic commands ###
