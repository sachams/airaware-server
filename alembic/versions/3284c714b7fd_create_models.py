"""create_models

Revision ID: 3284c714b7fd
Revises: e6899638a13d
Create Date: 2023-11-17 22:45:24.002345

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = "3284c714b7fd"
down_revision: Union[str, None] = "e6899638a13d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "request_log_new",
        sa.Column("request_id", sa.Integer(), nullable=False),
        sa.Column("time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("ip_address", sa.String(), nullable=False),
        sa.Column("path", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("request_id"),
    )
    op.create_table(
        "site",
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("site_code", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "unknown",
                "healthy",
                "offline",
                "coming_online",
                "needs_attention",
                name="sitestatus",
            ),
            nullable=False,
        ),
        sa.Column("latitude", sa.Float(), nullable=False),
        sa.Column("longitude", sa.Float(), nullable=False),
        sa.Column(
            "site_type",
            sa.Enum(
                "unknown",
                "urban_background",
                "suburban",
                "kerbside",
                "industrial",
                "roadside",
                "rural",
                name="classification",
            ),
            nullable=False,
        ),
        sa.Column("source", sa.Enum("breathe_london", "london_air", name="source"), nullable=False),
        sa.Column("photo_url", sa.String(), nullable=True),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("start_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("end_date", sa.DateTime(timezone=True), nullable=True),
        sa.Column("borough", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("site_id"),
        sa.UniqueConstraint("site_code"),
    )
    op.create_table(
        "broken_site",
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "unknown",
                "healthy",
                "offline",
                "coming_online",
                "needs_attention",
                name="sitestatus",
            ),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["site_id"],
            ["site.site_id"],
        ),
        sa.PrimaryKeyConstraint("site_id"),
    )
    op.create_table(
        "sensor_data",
        sa.Column("site_id", sa.Integer(), nullable=False),
        sa.Column("series", sa.Enum("pm25", "no2", name="series"), nullable=False),
        sa.Column("time", sa.DateTime(timezone=True), nullable=False),
        sa.Column("value", sa.Float(), nullable=False),
        sa.ForeignKeyConstraint(
            ["site_id"],
            ["site.site_id"],
        ),
        sa.PrimaryKeyConstraint("site_id", "series", "time"),
    )

    # Turn it into a Timescale hypertable
    connection = op.get_bind()
    connection.execute(text("SELECT create_hypertable('sensor_data','time');"))

    op.create_index(op.f("ix_sensor_data_series"), "sensor_data", ["series"], unique=False)
    op.create_index(op.f("ix_sensor_data_site_id"), "sensor_data", ["site_id"], unique=False)
    op.create_index(op.f("ix_sensor_data_time"), "sensor_data", ["time"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_sensor_data_time"), table_name="sensor_data")
    op.drop_index(op.f("ix_sensor_data_site_id"), table_name="sensor_data")
    op.drop_index(op.f("ix_sensor_data_series"), table_name="sensor_data")
    op.drop_table("sensor_data")
    op.drop_table("broken_site")
    op.drop_table("site")
    op.drop_table("request_log_new")
    # ### end Alembic commands ###
